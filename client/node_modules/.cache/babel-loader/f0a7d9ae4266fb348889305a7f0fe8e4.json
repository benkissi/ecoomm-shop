{"ast":null,"code":"var _jsxFileName = \"/code/ben/ecoomm-shop/client/src/App.js\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from './components/header/header.component';\nimport Spinner from './components/spinner/spinner.component';\nimport { GlobalStyle } from './global.styles';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { checkUserSession } from './redux/user/user.actions';\nconst ShopPage = lazy(() => import('./pages/shop/shop.component'));\nconst HomePage = lazy(() => import('./pages/homepage/homepage.component'));\nconst SignInAndSignUp = lazy(() => import('./pages/sign-in-and-sign-up/sign-in-and-sign-up.component'));\nconst CheckoutPage = lazy(() => import('./pages/checkout/checkout.component'));\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  checkUserSession(); // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   if(userAuth){\n  //     const userRef = await createUserProfileDocument(userAuth)\n  //     userRef.onSnapshot(snapshot => {\n  //       setCurrentUser({\n  //         id: snapshot.id,\n  //         ...snapshot.data()\n  //       })\n  //     })\n  //   }\n  //   setCurrentUser(userAuth)\n  // })\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: Spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/signin\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))));\n};\n\nconst matchStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(matchStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/code/ben/ecoomm-shop/client/src/App.js"],"names":["React","useEffect","lazy","Suspense","Route","Switch","Redirect","connect","Header","Spinner","GlobalStyle","selectCurrentUser","createStructuredSelector","checkUserSession","ShopPage","HomePage","SignInAndSignUp","CheckoutPage","App","currentUser","matchStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,MAAMC,QAAQ,GAAGZ,IAAI,CAAC,MAAM,OAAO,6BAAP,CAAP,CAArB;AACA,MAAMa,QAAQ,GAAGb,IAAI,CAAC,MAAM,OAAO,qCAAP,CAAP,CAArB;AACA,MAAMc,eAAe,GAAGd,IAAI,CAAC,MAAM,OAAO,2DAAP,CAAP,CAA5B;AACA,MAAMe,YAAY,GAAGf,IAAI,CAAC,MAAM,OAAO,qCAAP,CAAP,CAAzB;;AAEA,MAAMgB,GAAG,GAAI,CAAC;AAACL,EAAAA,gBAAD;AAAmBM,EAAAA;AAAnB,CAAD,KAAqC;AAC9ClB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIAA,EAAAA,gBAAgB,GAL8B,CAM9C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEJ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEM,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAED,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEG,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,MAAM,EAAE,MAC1BE,WAAW,GACT,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,GAGT,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAHF,CADF;AAqBD,CA5CH;;AA+CA,MAAMC,iBAAiB,GAAGR,wBAAwB,CAAC;AACjDO,EAAAA,WAAW,EAAER;AADoC,CAAD,CAAlD;;AAIA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,gBAAgB,EAAE,MAAMS,QAAQ,CAACT,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeN,OAAO,CAACa,iBAAD,EAAoBC,kBAApB,CAAP,CAA+CH,GAA/C,CAAf","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Header from './components/header/header.component'\nimport Spinner from './components/spinner/spinner.component'\n\nimport { GlobalStyle } from './global.styles'\n\nimport { selectCurrentUser } from './redux/user/user.selectors'\nimport { createStructuredSelector } from 'reselect'\nimport { checkUserSession } from './redux/user/user.actions'\n\nconst ShopPage = lazy(() => import('./pages/shop/shop.component'))\nconst HomePage = lazy(() => import('./pages/homepage/homepage.component'))\nconst SignInAndSignUp = lazy(() => import('./pages/sign-in-and-sign-up/sign-in-and-sign-up.component'))\nconst CheckoutPage = lazy(() => import('./pages/checkout/checkout.component'))\n\nconst App =  ({checkUserSession, currentUser}) => {\n    useEffect(() => {\n      checkUserSession()\n    }, [checkUserSession])\n    \n    checkUserSession()\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if(userAuth){\n    //     const userRef = await createUserProfileDocument(userAuth)\n\n    //     userRef.onSnapshot(snapshot => {\n    //       setCurrentUser({\n    //         id: snapshot.id,\n    //         ...snapshot.data()\n    //       })\n    //     })\n        \n    //   }\n    //   setCurrentUser(userAuth)\n    // })\n  \n\n \n    return (\n      <div>\n        <GlobalStyle/>\n        <Header />\n        <Switch>\n          <Suspense fallback={Spinner}>\n            <Route exact path='/' component={HomePage} />\n            <Route path='/shop' component={ShopPage} />\n            <Route exact path='/checkout' component={CheckoutPage}/>\n            <Route path='/signin' render={() => (\n                currentUser ? (\n                  <Redirect to='/' />\n                ) : (\n                  <SignInAndSignUp />\n                )\n            )}/>\n          </Suspense>\n        </Switch>\n        \n      </div>\n    );\n  }\n\n\nconst matchStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(matchStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}