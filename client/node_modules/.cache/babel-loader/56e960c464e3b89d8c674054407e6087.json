{"ast":null,"code":"import _objectSpread from \"/code/ben/ecoomm-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/code/ben/ecoomm-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/code/ben/ecoomm-shop/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"paswords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sign up with email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/code/ben/ecoomm-shop/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport { signUpStart } from '../../redux/user/user.actions'\n\nimport './sign-up.styles.scss'\n\nconst SignUp = ({signUpStart}) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { displayName, email, password, confirmPassword } = userCredentials\n    \n    const handleSubmit = async event => {\n        event.preventDefault()\n        \n        if(password !== confirmPassword) {\n            alert(\"paswords don't match\")\n            return\n        }\n\n        signUpStart({displayName, email, password})\n        \n    }\n\n    const handleChange = event => {\n        const {name, value} =event.target\n\n        setUserCredentials({...userCredentials, [name]: value})\n    }\n        return (\n            <div className='sign-up'>\n                <h2 className='title'>I do not have an account</h2>\n                <span>Sign up with email and password</span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                    required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={handleChange}\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={handleChange}\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={handleChange}\n                        label='Confirm Password'\n                        required\n                    />                 \n                    \n                    <CustomButton type='submit'>Sign Up</CustomButton>\n                    \n                </form>\n\n            </div>\n        )\n    }\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentials) => \n                    dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}